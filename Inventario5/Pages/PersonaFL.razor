@page "/PersonaFL"
@page "/PersonaFL/{operationparameter}/{llamadorparameter}"

@inject NavigationManager NavigationManager
@inject History History;

@using Inventario5.Models
@using Microsoft.EntityFrameworkCore;
@using Inventario5.Shared.clases;

<h1>@PLURAL_NAME</h1>

@if (lItem == null) {
    <p><em>Cargando...</em></p>
} else {
    <div class="container">
        <div class="row">
            <div class="col"><h2>Lista</h2></div>
            <div class="col-auto">
                @if (this.state.Operation == On.select) {
                    <button class="btn btn-primary" @onclick="SalirSinSeleccionar">Salir sin seleccionar</button>@:&nbsp;
                }
                <button class="btn btn-primary" @onclick="() => CallOperation(null,On.insert)">Crear @SINGULAR_NAME</button>
            </div>
        </div>
        <div class="row"><div class="col"><output>@mensaje</output></div></div>
        <div class="row">
            <div class="col">
                <table class="table">
                    <thead> <tr> <th>Nombre</th> <th>Opciones</th> </tr> </thead>
                    <tbody>
                        @foreach (var item in lItem) {
                            <tr>
                                <td>@item.Nomb</td>
                                <td>
                                    <div style="white-space: nowrap;">
                                        @if ((this.state.Operation != null) && (this.state.Operation.Equals(On.select))) {
                                            <button class="btn btn-primary" @onclick="() => CallOperation(item,On.select)">Seleccionar</button>@:&nbsp;
                                        }
                                        <button class="btn btn-primary" @onclick="() => CallOperation(item,On.update)">Modificar</button>&nbsp;
                                        <button class="btn btn-primary" @onclick="() => CallOperation(item,On.delete)">Eliminar</button>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>

    </div>

}

@code {
    private const string OPERATION_PAGE = "PersonaFE";
    private const string SINGULAR_NAME = "Persona";
    private const string PLURAL_NAME = "Personas";

    [Parameter]
    public string OperationParameter { get; set; }
    [Parameter]
    public string LlamadorParameter { get; set; }

    public class PersonaFLState : IHistoryItem {
        public string Operation; //show o select
        public string Llamador; // la página a la que volver si seleccionamos
    }
    public PersonaFLState state;

    private InventarioDBContext context = new InventarioDBContext();
    private DbSet<Persona> lItem;
    private string mensaje = "";

    protected override void OnInitialized() {
        this.state = History.Get(typeof(PersonaFLState)) as PersonaFLState;
        if (this.state == null) {
            this.state = new PersonaFLState();
            this.state.Operation = OperationParameter;
            this.state.Llamador = LlamadorParameter;
        } else {
            History.Remove(this.state);
        }
        lItem = context.Personas;
    }

    protected void CallOperation(Persona item, string operation) {
        if (operation.Equals(On.select)) {//Si es una selección metemos el item en History y vamos al llamador
            History.Add(item);
            this.NavigationManager.NavigateTo(this.state.Llamador);
        } else { //En otro caso almacenamos el estado para poder volver y vamos al FE para realizar la operación requerida
            History.Add(this.state);
            int itemId = item == null ? 0 : item.Id; // si no hay item por ser una inserción usamos el como itemId un 0
            this.NavigationManager.NavigateTo(On.generateNavigateTo("PersonaFE", operation, itemId));
        }

    }

    protected void SalirSinSeleccionar() {
        this.NavigationManager.NavigateTo(this.state.Llamador);
    }
}
