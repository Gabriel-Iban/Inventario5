@page "/WorkstationFE"
@page "/WorkstationFE/{operation}/{id:int}"

@inject NavigationManager NavigationManager

@using Inventario5.Data
@using Inventario5.Models
@using Microsoft.EntityFrameworkCore;
@using Inventario5.Shared.clases;

<h1>Estación de Trabajo</h1>

@if (item == null) {
    <p><em>Cargando...</em></p>
} else {
    <div class="container">
        <div class="row">
            <div class="col">
                <h2>Añadir</h2>
            </div>
        </div>
        <EditForm Model="item">

            <div class="row">
                <div class="col">
                    <div class="form-group">
                        <label for="codigo" class="control-label">Código</label>
                        <InputText @bind-Value="this.elementoinventariable.Codigo" id="codigo" class="form-control" />
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col">
                    <div class="form-group">
                        <label for="numeroserie" class="control-label">Número de Serie</label>
                        <InputText @bind-Value="this.ordenador.NumeroSerie" id="numeroserie" class="form-control" />
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col">
                    <div class="form-group">
                        <label for="memoria" class="control-label">Memoria</label>
                        <InputNumber @bind-Value="this.ordenador.Memoria" id="memoria" class="form-control" />
                    </div>
                </div>
                <div class="col">
                    <div class="form-group">
                        <label for="unidadMemoria" class="control-label">Unidad</label>
                        <InputSelect @bind-Value="this.ordenador.UnidadMemoria" id="unidadMemoria" class="form-control">
                            @foreach (var item in lUnidad) {
                                <option value="@item.Id">@item.Nomb</option>
                                }
                        </InputSelect>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col">
                    <div class="form-group">
                        <label for="discoduro" class="control-label">Disco Duro</label>
                        <InputNumber @bind-Value="this.ordenador.DiscoDuro" id="discoduro" class="form-control" />
                    </div>
                </div>
                <div class="col">
                    <div class="form-group">
                        <label for="unidadDiscoDuro" class="control-label">Unidad</label>
                        <InputSelect @bind-Value="this.ordenador.UnidadDiscoDuro" id="unidadDiscoDuro" class="form-control">
                            @foreach (var item in lUnidad) {
                                <option value="@item.Id">@item.Nomb</option>
                                }
                        </InputSelect>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col">
                    <div class="form-group">
                        <label for="idProcesador" class="control-label">Procesador</label>
                        <InputSelect @bind-Value="this.ordenador.IdProcesador" id="idProcesador" class="form-control">
                            @foreach (var item in lProcesador) {
                                <option value="@item.Id">@item.Nomb</option>
                                }
                        </InputSelect>
                    </div>
                </div>
                <div class="col">
                    <div class="form-group">
                        <label for="velocidadProcesador" class="control-label">Velocidad Procesador</label>
                        <InputNumber @bind-Value="this.ordenador.VelocidadProcesador" id="velocidadProcesador" class="form-control" />
                    </div>
                </div>
            </div>
            <p>Estos 3 últimos campos no son funcionales todavía dado que se utilizarán los grid en lugar de combos y no están hechos todavía</p>
            <div class="row">
                <div class="col">
                    <div class="form-group">
                        <label for="idPersona" class="control-label">Persona asignada</label>
                        <div class="input-group mb-3">
                            <InputText @bind-Value="borrame" class="form-control" />
                            <div class="input-group-append">
                                <span class="input-group-text" id="basic-addon2">Buscar</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col">
                    <div class="form-group">
                        <label for="idPersona" class="control-label">Ubicación</label>
                        <div class="input-group mb-3">
                            <InputText @bind-Value="borrame" class="form-control" />
                            <div class="input-group-append">
                                <span class="input-group-text" id="basic-addon2">Buscar</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col">
                    <div class="form-group">
                        <label for="idPersona" class="control-label">Marca y Modelo</label>
                        <div class="input-group mb-3">
                            <InputText @bind-Value="borrame" class="form-control" />
                            <div class="input-group-append">
                                <span class="input-group-text" id="basic-addon2">Buscar</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col">
                    <div class="form-group">
                        <label for="notas" class="control-label">Notas</label>
                        <InputTextArea @bind-Value="this.elementoinventariable.Notas" id="notas" class="form-control" />
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col">
                    <button class="btn btn-primary" @onclick="MakeOperation">@OperationText</button>
                </div>
                <div class="col">
                    <a class="btn btn-secondary" href="WorkstationFL">Cancelar</a>
                </div>
            </div>
        </EditForm>
    </div>
}

@code {
    [Parameter]
    public string Operation { get; set; }
    [Parameter]
    public int Id { get; set; }

    private string OperationText;

    private string borrame;

    private Workstation item;
    private Ordenador ordenador;
    private ElementoInventariable elementoinventariable;
    private DbSet<Unidad> lUnidad;
    private DbSet<Procesador> lProcesador;

    private InventarioDBContext context = new InventarioDBContext();

    protected override void OnInitialized() {
        base.OnInitialized();
        this.OperationText = On.getText(Operation);
        this.lUnidad = context.Unidads;
        this.lProcesador = context.Procesadors;
        switch (Operation) {
            case On.insert:
                this.item = new Workstation();
                this.ordenador = new Ordenador();
                this.elementoinventariable = new ElementoInventariable();
                this.elementoinventariable.Ordenador = this.ordenador;
                this.ordenador.Workstation = this.item;
                break;
            case On.update:
            case On.delete:
                this.item = context.Workstations.Find(Id);
                this.ordenador = context.Ordenadors.Find(Id);
                this.elementoinventariable = context.ElementoInventariables.Find(Id);
                break;
            default:
                throw new Exception("Operación no considerada");
        }
    }
    protected void MakeOperation() {
        switch (Operation) {
            case On.insert:
                context.ElementoInventariables.Add(this.elementoinventariable);
                context.Ordenadors.Add(this.ordenador);
                context.Workstations.Add(this.item);
                break;

            case On.update:
                context.ElementoInventariables.Update(this.elementoinventariable);
                context.Ordenadors.Update(this.ordenador);
                context.Workstations.Update(item);
                break;

            case On.delete:
                context.Workstations.Remove(this.item);
                context.Ordenadors.Remove(this.ordenador);
                context.ElementoInventariables.Remove(this.elementoinventariable);
                break;
            default:
                throw new Exception("Operación no considerada");
        }
        var changesNumber = context.SaveChanges();
        if (changesNumber > 0) {
            NavigationManager.NavigateTo("WorkstationFL");
        }
    }
}
